name: CI Pipeline

on:
  workflow_dispatch:

env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  MYSQL_ROOT_PASSWORD: root

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    if: github.actor == 'pablo-code-org'

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
        ports:
          - 3306:3306

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          path: code-dot-org

      - name: Get Branch Name from Hardcoded Pull Request ID
        id: get_branch
        run: |
          PR_ID=55766
          PR_DATA=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                        https://api.github.com/repos/code-dot-org/code-dot-org/pulls/$PR_ID)
          BRANCH_NAME=$(echo $PR_DATA | jq -r .head.ref)
          echo "Branch Name: $BRANCH_NAME"
          echo "::set-output name=branch_name::$BRANCH_NAME"
        working-directory: /home/runner/work/code-dot-org/code-dot-org/

      - name: Checkout Branch
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.get_branch.outputs.branch_name }}
          path: code-dot-org
          repository: code-dot-org/code-dot-org
          token: ${{ secrets.GITHUB_TOKEN }}
        working-directory: /home/runner/work/code-dot-org/code-dot-org/

      - name: Set up Docker Environment
        run: docker build -t my-ci-image -f ./docker/dockerfiles/Dockerfile .
        working-directory: /home/runner/work/code-dot-org/code-dot-org/

      - name: Run Unit Tests
        run: |
          docker run my-ci-image /bin/bash -c "source ./docker/unit_test.sh"
        working-directory: /home/runner/work/code-dot-org/code-dot-org/

      - name: Run UI Tests
        run: |
          docker run my-ci-image /bin/bash -c "source ./docker/ui_tests.sh"
        working-directory: /home/runner/work/code-dot-org/code-dot-org/

      - name: Update Cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
